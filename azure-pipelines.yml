# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

resources:
  repositories:
  - repository: ranjith-rafay
    type: github
    name: ranjith-rafay/rafay-cicd-helpers
    endpoint: ranjith-rafay
    ref: master

variables:
  workload_yaml: $(System.DefaultWorkingDirectory)/workload/helm3/manifests/workload-spec.yaml
  create_ns_yaml: $(System.DefaultWorkingDirectory)/workload/helm3/manifests/rafay_create_ns.yaml
pool:
  vmImage: 'ubuntu-latest'

steps:
- task: CmdLine@2
  inputs:
    script: |
      echo 'Workload Spec Path on Agent Machine :$(System.DefaultWorkingDirectory)/workload/helm3/manifests/workload-spec.yaml'
      echo 'Namespace Creation Manfiest YAML on Agent Machine: $(System.DefaultWorkingDirectory)/workload/helm3/manifests/rafay_create_ns.yaml'
  displayName: 'Copying YAML spec of Workload and Namespace'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      workload=$(sudo cat $(workload_yaml) | grep -iw name | awk '{print $2}')
      namespace=$(sudo cat $(workload_yaml) | grep -iw namespace | awk '{print $2}')
      cluster=$(sudo cat $(workload_yaml) | grep -iw clusters | awk '{print $2}' | tr -d '"')
      echo "##vso[task.setvariable variable=workload]$workload"
      echo "##vso[task.setvariable variable=namespace]$namespace"
      echo "##vso[task.setvariable variable=cluster]$cluster"
      echo "Selected Workload is : ${workload}"
      echo "Selected Namespace is : ${namespace}"
      echo "Selected Rafay Cluster is :  ${cluster}"
  displayName: 'Get Workload Paramters'
  name: GetWorkload

- script: |
    export RCTL_PROFILE=$(RCTL_PROFILE)
    export RCTL_API_KEY=$(RCTL_API_KEY)
    export RCTL_API_SECRET=$(RCTL_API_SECRET)
    export RCTL_PROJECT=$(RCTL_PROJECT)
    export RCTL_REST_ENDPOINT=$(RCTL_REST_ENDPOINT)
    export RCTL_OPS_ENDPOINT=$(RCTL_OPS_ENDPOINT)
    wget -O ${HOME}/rctl-linux-amd64.tar.bz2 https://s3-us-west-2.amazonaws.com/rafay-prod-cli/publish/rctl-linux-amd64.tar.bz2
    tar -C ${HOME} -xf ${HOME}/rctl-linux-amd64.tar.bz2
    set +e
    `sudo sed "s/%ns_name%/$(namespace)/g; s/%cluster_name%/$(cluster)/g" $(create_ns_yaml)  > create_ns.yaml`
    chmod 777 ${HOME}/rctl
    echo "Rafay Binary has been pulled and saved successfully on Agent machine"
    ${HOME}/rctl get cluster | awk {'print $2'}| grep -v NAME | awk '!/^$/' > /tmp/getcluster.out
    grep -i $(cluster) /tmp/getcluster.out > /dev/null 2>&1
    if [ $? -eq 1 ]; then
      echo "There is no cluster with name $(cluster) as exists!!!"
      exit 0
    fi
    rm /tmp/getcluster.out 
    ${HOME}/rctl get namespace | awk {'print $2'}| grep -v NAME | awk '!/^$/' > /tmp/getns.out
    grep -i $(namespace) /tmp/getns.out > /dev/null 2>&1
    if [ $? -eq 1 ]; then
      ${HOME}/rctl create ns -f create_ns.yaml
      sleep 5
      ${HOME}/rctl publish ns $(namespace)
      sleep 10
    else
      echo "Namespace $(namespace) is already exists"
    fi
    rm /tmp/getns.out
    ${HOME}/rctl create workload $(workload_yaml)
    ${HOME}/rctl publish workload $(workload)
    workload_status="Not Ready"
    workload_status_iterations=1
    while [ "$workload_status" != "Ready" ];
    do
      workload_status=`${HOME}/rctl status workload $(workload) -o json|jq .result[].status|tr -d '"'`
      echo "$(workload)  deployment is $workload_status"
      sleep 10
      if [[ "$workload_status" = "Failed"  ||  $workload_status_iterations -eq 10 ]];
      then
        echo "$(workload) Deployment has been Failed"
        break
      fi
      workload_status_iterations=$((workload_status_iterations+1))
    done
  displayName: 'create and publish workload'